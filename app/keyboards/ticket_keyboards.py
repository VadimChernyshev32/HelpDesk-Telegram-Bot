from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup
from aiogram.types import InlineKeyboardButton

class TicketKeyboards:

    def new_ticket(self):
        # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏
        text = (
            f"<b>üì§ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏</b>\n\n"
            f" - üß© –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏ —É–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ.\n\n"
            f"<b>–ü—Ä–∏–º–µ—Ä –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏:</b> \n<i>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏–Ω—Ç–µ—Ä –Ω–∞ 4 –ü–ö, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.</i>"
        )
        builder = InlineKeyboardBuilder()
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu"))
        return text, builder.as_markup()

    def ticket_created(self, ticket_id: int):
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏ —Å –Ω–æ–º–µ—Ä–æ–º —Ç–∏–∫–µ—Ç–∞
        text = (
            f'üéâü•≥ –£—Å–ø–µ—Ö, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞! \n\n'
            f'<b>–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: </b><code>#{ticket_id}</code>. \n\n'
            f'<i>PS: –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –≤ —Ä–∞–∑–¥–µ–ª–µ</i> <b>"üì• –ú–æ–∏ –∑–∞—è–≤–∫–∏"</b>'
        )
        builder = InlineKeyboardBuilder()
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
        builder.add(InlineKeyboardButton(text="üßë‚Äçüíª –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
        return text, builder.as_markup()

    def my_tickets(self, tickets: list):
        # –ï—Å–ª–∏ –∑–∞—è–≤–æ–∫ –Ω–µ—Ç, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not tickets:
            text = '<b>üì• –ú–æ–∏ –∑–∞—è–≤–∫–∏ </b>\n\n–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫ –≤ —Ä–∞–±–æ—Ç–µ..'
            builder = InlineKeyboardBuilder()
            builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu"))
            return text, builder.as_markup()

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫
        text = (
            f"<b>üì• –ú–æ–∏ –∑–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ</b>\n\n"
            f"<b>–ó–∞—è–≤–æ–∫ –≤ —Ä–∞–±–æ—Ç–µ:</b> {len(tickets)}\n\n"
        )
        builder = InlineKeyboardBuilder()

        # –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞—è–≤–∫–∏ —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É —Å –Ω–æ–º–µ—Ä–æ–º –∏ –≤—Ä–µ–º–µ–Ω–µ–º –∑–∞—è–≤–∫–∏
        for ticket in tickets:
            text_button = f"–ó–∞—è–≤–∫–∞ #{ticket.number_ticket} - {ticket.time_ticket}"
            callback_data = f"ticket_{ticket.number_ticket}"
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É
            builder.row(InlineKeyboardButton(text=text_button, callback_data=callback_data))

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞—è–≤–æ–∫
        builder.row(InlineKeyboardButton(text="‚òëÔ∏è –ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫", callback_data="my_ticket_history"))
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu"))

        return text, builder.as_markup()

    def my_ticket_history(self, tickets: list, user_id: int, page: int = 1, page_size: int = 4):
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ä–µ–∑ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø–∞–≥–∏–Ω–∞—Ü–∏—è)
        start_index = (page - 1) * page_size
        end_index = start_index + page_size
        current_page = tickets[start_index:end_index]

        if current_page:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –Ω–æ–º–µ—Ä–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            text = f"<b>üì® –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ {page}):</b>\n\n"
            # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∑–∞—è–≤–∫–∏ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –≤—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª–∏
            for t in current_page:
                text += (
                    f"‚úÖ\n"
                    f"<b>‚îú –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:</b> <code>#{t.number_ticket}</code>\n"
                    f"<b>‚îú –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:</b> {t.time_ticket}\n"
                    f"<b>‚îú –°–æ–æ–±—â–µ–Ω–∏–µ:</b> - <em>{t.message_ticket}</em>\n"
                    f"<b>‚îî –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:</b> - <em>{t.ticket_comm}</em>\n\n"
                )
        else:
            # –ï—Å–ª–∏ –∑–∞—è–≤–æ–∫ –Ω–µ—Ç, –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            text = "ü§∑‚Äç‚ôÇÔ∏è –£–ø—Å... –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫."

        keyboard = InlineKeyboardBuilder()
        # –ï—Å–ª–∏ –∑–∞—è–≤–æ–∫ –±–æ–ª—å—à–µ, —á–µ–º –ø–æ–º–µ—â–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if len(tickets) > page_size:
            if page > 1:
                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                keyboard.add(InlineKeyboardButton(text="üîô –ü—Ä–µ–¥—ã–¥—É—â–∞—è", callback_data=f"my_ticket_page_{page - 1}"))
            if end_index < len(tickets):
                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                keyboard.add(InlineKeyboardButton(text="üîú –°–ª–µ–¥—É—é—â–∞—è", callback_data=f"my_ticket_page_{page + 1}"))
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É —Ç–µ–∫—É—â–∏—Ö –∑–∞—è–≤–æ–∫
        keyboard.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="my_ticket"))
        return text, keyboard.as_markup()

    def ticket_details(self, ticket_info: tuple) -> tuple[str, InlineKeyboardMarkup]:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–∏–∫–µ—Ç—É —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –Ω–∞–∂–∞—Ç—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        text = (f"<b>–î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏:</b> <code>#{ticket_info[0]}\n\n</code>"
                f"<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID:</b> <a href='tg://user?id={ticket_info[1]}'>{ticket_info[1]}</a>\n"
                f"<b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</b> {ticket_info[2]}\n"
                f"<b>–ê–¥—Ä–µ—Å:</b> {ticket_info[3]}\n\n"
                f"<b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> - <em>{ticket_info[4]}</em>\n\n"
                f"<b>–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:</b> {ticket_info[5]}\n"
                f"<b>–°—Ç–∞—Ç—É—Å:</b> {ticket_info[6]}\n\n"
                f"<em>‚ö†Ô∏è –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. –í –æ—Ç–≤–µ—Ç –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º!</em>")

        keyboard = InlineKeyboardBuilder()
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu"))
        return text, keyboard.as_markup()
