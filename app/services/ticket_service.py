from app.repositories.ticket_repository import TicketRepository
from app.repositories.user_repository import UserRepository
from app.models.ticket import Ticket


class TicketService:
    def __init__(self):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–∫–µ—Ç–∞–º–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        self.ticket_repo = TicketRepository()
        self.user_repo = UserRepository()

    def create_ticket(self, user_id: int, message_text: str) -> dict:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        org_info = self.user_repo.get_organization_info(user_id)
        if not org_info:
            # –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫–∏
            org_name = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            org_address = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        else:
            org_name, org_address, _ = org_info  # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∫–æ—Ä—Ç–µ–∂–∞

        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ç–∏–∫–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é —Ñ–∞–±—Ä–∏—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞
        ticket = Ticket.new_ticket(
            user_id=user_id,
            organization=org_name,
            address=org_address,
            message=message_text
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–∫–µ—Ç –≤ –ë–î –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ ID
        ticket_id = self.ticket_repo.create_ticket(ticket)

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_info = self.user_repo.get_user_by_id(user_id)
        phone = user_info.phone if user_info and hasattr(user_info, 'phone') else "–Ω–µ —É–∫–∞–∑–∞–Ω"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_message = (
            f"üì¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{ticket_id}\n"
            f"–û—Ç: {phone}\n"
            f"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {org_name}\n"
            f"–ê–¥—Ä–µ—Å: {org_address}\n"
            f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message_text}"
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º ID —Ç–∏–∫–µ—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        return {
            "ticket_id": ticket_id,
            "admin_message": admin_message
        }

    def get_ticket_info(self, ticket_id: int) -> tuple:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–∫–µ—Ç –ø–æ ID
        ticket = self.ticket_repo.get_ticket_by_id(ticket_id)
        if not ticket:
            return None

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è —Ç–∏–∫–µ—Ç–∞ –∫–∞–∫ –∫–æ—Ä—Ç–µ–∂
        return (
            ticket.number_ticket,
            ticket.tg_id_ticket,
            ticket.organization,
            ticket.addres_ticket,
            ticket.message_ticket,
            ticket.time_ticket,
            ticket.state_ticket,
            ticket.ticket_comm
        )

    def get_user_tickets(self, user_id: int, status: str = None):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Å—Ç–∞—Ç—É—Å—É
        return self.ticket_repo.get_user_tickets(user_id, status)

    def get_all_tickets(self):
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∏–∫–µ—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        return self.ticket_repo.get_all_tickets()

    def get_completed_tickets(self, user_id: int) -> list:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return [
            ticket for ticket in self.ticket_repo.get_user_tickets(user_id)
            if ticket.state_ticket == "–ó–∞–≤–µ—Ä—à–µ–Ω–∞"
        ]

    def get_ticket_by_status(self, status: str) -> list[Ticket]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∏–∫–µ—Ç–æ–≤ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º.

        :param status: –°—Ç–∞—Ç—É—Å —Ç–∏–∫–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–í —Ä–∞–±–æ—Ç–µ', '–ó–∞–≤–µ—Ä—à–µ–Ω–∞')
        :return: –°–ø–∏—Å–æ–∫ —Ç–∏–∫–µ—Ç–æ–≤
        """
        tickets = self.ticket_repo.get_ticket_by_status(status)
        return tickets if tickets else []

    def get_ticket_by_status_and_company(self, status: str, company: str):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–∫–µ—Ç—ã –ø–æ —Å—Ç–∞—Ç—É—Å—É –∏ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–æ–º–ø–∞–Ω–∏–∏
        tickets = self.ticket_repo.get_ticket_by_status_and_company(status, company)
        return tickets if tickets else []

    def complete_ticket_with_comment(self, ticket_id: int, comment: str) -> bool:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–∫–µ—Ç –ø–æ ID
        ticket = self.ticket_repo.get_ticket_by_id(ticket_id)
        if not ticket:
            return False

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ "–ó–∞–≤–µ—Ä—à–µ–Ω–∞"
        ticket.ticket_comm = comment
        ticket.state_ticket = "–ó–∞–≤–µ—Ä—à–µ–Ω–∞"

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–∫–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        return self.ticket_repo.update_ticket(ticket)
